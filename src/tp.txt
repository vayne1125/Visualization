            // float rotationY = modelManager->getRotationY();
            // glm::mat4 model_4x4 = modelManager->get_model_matrix() * modelManager->get_fixedRY_matrix();
            // glm::mat3 model_3x3 = glm::mat3(1.0f);//glm::mat3(model_4x4[0][0],model_4x4[0][1],model_4x4[0][2],model_4x4[1][0], model_4x4[1][1], model_4x4[1][2], model_4x4[2][0],model_4x4[2][1],model_4x4[2][2]);
            // model_4x4 = modelManager->get_fixedRY_matrix();
            // glm::mat3 modelFRY_3x3 = glm::mat3(model_4x4[0][0],model_4x4[0][1],model_4x4[0][2],model_4x4[1][0], model_4x4[1][1], model_4x4[1][2], model_4x4[2][0],model_4x4[2][1],model_4x4[2][2]);
            
            // model_3x3 = modelFRY_3x3 * model_3x3; 

            // glm::mat3 m3(1.0f);
            // glm::vec3 v3(0.0f,0.0f,-100.0f);
            // glm::vec3 v4 = m3 * v3;
            
            // glm::vec3 xyplane = glm::vec3(0.0f,0.0f,-100.0f);
            // glm::vec3 i = model_3x3 * xyplane;
            // glm::vec3 _xyplane = model_3x3 * glm::vec3(0.0f,0.0f,100.0f);
            // glm::vec3 xzplane = model_3x3 * glm::vec3(0.0f,-100.0f,0.0f);
            // glm::vec3 _xzplane = model_3x3 * glm::vec3(0.0f,100.0f,0.0f);
            // glm::vec3 yzplane = model_3x3 * glm::vec3(-100.0f,0.0f,0.0f);
            // glm::vec3 _yzplane = model_3x3 * glm::vec3(100.0f,0.0f,0.0f);